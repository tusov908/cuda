program barrier
        use cufft
        use cudafor
        implicit none
        integer, parameter :: N=1024
        integer :: N_t=99,i,m
        real(8) :: L=100, T=10
        real(8) :: sigma_0 = 1, x_0 = 40, k_0 = 20, a, b !начальные параметры пакета
        real(8) :: dt,dx,x,k, barr
        complex(8) :: expPotential(N)
        character(20) :: filename
        complex(8), managed :: waveFunc(N),waveFunc_f(N)
        integer plan, ierr

        dt=T/(N_t-1) !шаги по времени и координате
        dx=L/(N-1)

        a = 1.0/SQRT(2*3.1415*sigma_0)
        b=1.0/(4.0*sigma_0*sigma_0)

        do i = 1,N
                x=dx*(i-1)
                expPotential(i) = EXP(-1.0*dt/2.0*(0.,1.)*barr(x))
                waveFunc(i) = a*EXP(-b*(x-x_0)*(x-x_0))*EXP((0.,1.)*k_0*(x-x_0)) !начальный волновой пакет
        enddo       
        do m = 1,N_t
                write(filename, '(i5.3).txt') m
                open(10,file=filename) !файл записи для каждой итерации времени
                do i=1,N
                        write(10,*) abs(waveFunc(i))**2 !запись модуля предыдущей волновой функции
                        waveFunc(i) = waveFunc(i)*expPotential(i)
                enddo
                ierr = cufftPlan1D(plan,N,CUFFT_Z2Z,1)
                ierr = ierr + cufftExecZ2Z(plan,waveFunc,waveFunc_f,CUFFT_FORWARD)
                do i=1,N
                        k=((i-1)-N/2.0)/L
                        waveFunc_f(i) = waveFunc_f(i)*EXP(-1.0*dt/2.0*(0.,1.)*k*k)
                enddo
                ierr = ierr + cufftExecZ2Z(plan,waveFunc_f,waveFunc,CUFFT_INVERSE)
                ierr = ierr + cudaDeviceSynchronize()
                do i=1,N
                        waveFunc(i) = waveFunc(i)/N*expPotential(i)
                enddo
                ierr = ierr + cufftDestroy(plan)
                close(10)
        enddo
end program barrier

real function barr(x)
        real :: x,barr
        if (x>60) barr=0
        if (x<60 .or. x==60) barr=0
        return
end function barr
